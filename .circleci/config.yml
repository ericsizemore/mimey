version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.4.3
jobs:
  install:
    docker:
      - image: cimg/php:8.2.8-browsers
    working_directory: ~/mimey
    steps:
      - browser-tools/install-browser-tools
      - checkout
      - run: php --version
      - run: sudo composer self-update
      - restore_cache:
          keys:
            - composer-v2-{{ checksum "composer.json" }}
            - composer-v2-
      - run: composer update --prefer-dist --optimize-autoloader --no-progress --no-interaction
      - save_cache:
          key: composer-v2-{{ checksum "composer.json" }}
          paths:
            - vendor
      - persist_to_workspace:
          root: .
          paths:
            - vendor
  test-php81:
    docker:
      - image: cimg/php:8.1.22-browsers
    working_directory: ~/mimey
    steps:
      - run: sudo pecl install xdebug
      - checkout
      - run: php --version
      - attach_workspace:
          at: .
      - run:
          name: "Setup custom environment variables"
          command: echo 'export XDEBUG_MODE="coverage"' >> "$BASH_ENV"
      - run: phpdbg -qrr vendor/bin/phpunit --colors=never --log-junit build/phpunit/results81.xml --coverage-html build/coverage --coverage-clover build/clover.xml
      - run: vendor/bin/php-coveralls -x build/clover.xml -o build/coveralls.json || true
      - store_test_results:
          path: build
  test-php82:
    docker:
      - image: cimg/php:8.2.8-browsers
    working_directory: ~/mimey
    steps:
      - run: sudo pecl install xdebug && docker-php-ext-enable xdebug
      - checkout
      - run: php --version
      - attach_workspace:
          at: .
      - run:
          name: "Setup custom environment variables"
          command: echo 'export XDEBUG_MODE="coverage"' >> "$BASH_ENV"
      - run: phpdbg -qrr vendor/bin/phpunit --colors=never --log-junit build/phpunit/results82.xml --coverage-html build/coverage --coverage-clover build/clover.xml
      - run: vendor/bin/php-coveralls -x build/clover.xml -o build/coveralls.json || true
      - run:
          name: Creating Dummy Artifacts
          command: |
            mkdir /build/artifacts;
            echo "my artifact files in a dir" > /build/artifacts/artifact-1;
      - store_artifacts:
          path: /build/artifacts/artifact-1
          destination: artifact-file
      - store_test_results:
          path: build
workflows:
  version: 2
  test:
    jobs:
      - install
      - test-php81:
          requires:
            - install
      - test-php82:
          requires:
            - install